PRAGMA foreign_keys = true;

-- script DDL 
-- Que cria o banco dados

DROP TABLE ESTACIONA;
DROP TABLE MENSALISTA;
DROP TABLE AVULSO;
DROP TABLE CLIENTE;
DROP TABLE VAGA;

CREATE TABLE VAGA (
  NUMERO INT NOT NULL,
  STATUS CHAR(1) CHECK (STATUS IN ('O', 'L')),
  PRIMARY KEY (NUMERO)
);

CREATE TABLE CLIENTE (
  CODIGO INT NOT NULL,
  PRIMARY KEY (CODIGO)
);

CREATE TABLE MENSALISTA (
  CODIGO INT NOT NULL,
  NOME VARCHAR(100) NOT NULL,
  PRIMARY KEY (CODIGO),
  FOREIGN KEY (CODIGO) REFERENCES CLIENTE(CODIGO)
);

CREATE TABLE AVULSO (
  CODIGO INT NOT NULL,
  PLACA CHAR(8) NOT NULL,
  MARCA VARCHAR(20),
  COR VARCHAR(20),
  PRIMARY KEY (CODIGO),
  FOREIGN KEY (CODIGO) REFERENCES CLIENTE(CODIGO)
);

CREATE TABLE ESTACIONA (
  ID INT AUTO INCREMENT,
  ENTRADA TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  SAIDA TIMESTAMP,
  VAGA INT NOT NULL,
  CLIENTE INT NOT NULL,
  VALOR NUMERIC(10,2) DEFAULT 0,
  PRIMARY KEY(ID),
  FOREIGN KEY (VAGA) REFERENcES VAGA(NUMERO),
  FOREIGN KEY (CLIENTE) REFERENcES CLIENTE(CODIGO)
);

-- script DML

INSERT INTO VAGA(NUMERO, STATUS) VALUES(100, 'L');
INSERT INTO VAGA(NUMERO, STATUS) VALUES(200, 'O');
INSERT INTO VAGA(NUMERO, STATUS) VALUES(300, 'L');

INSERT INTO CLIENTE VALUES(1);
INSERT INTO CLIENTE VALUES(2);
INSERT INTO CLIENTE VALUES(3);

INSERT INTO MENSALISTA(CODIGO, NOME) VALUES (1, 'YURI');
INSERT INTO MENSALISTA(CODIGO, NOME) VALUES(4, 'MARIA');
INSERT INTO MENSALISTA(CODIGO) VALUES(2);
INSERT INTO AVULSO(CODIGO, PLACA, MARCA, COR) VALUES(2, 'AAA-1234', 'BYD', 'CHUMBO');
INSERT INTO AVULSO(CODIGO, PLACA, MARCA, COR) VALUES(3, 'BBB-5678', 'FIAT', 'AZUL');
INSERT INTO ESTACIONA(VAGA, CLIENTE) VALUES(200, 2);

INSERT INTO VAGA(NUMERO, STATUS) VALUES(100, 'O');
INSERT INTO VAGA(NUMERO, STATUS) VALUES(400, 'F');

UPDATE VAGA SET STATUS = 'F' WHERE NUMERO=100;

DELETE FROM VAGA; -- TODOS OS REGISTROS
DELETE FROM VAGA WHERE NUMERO = 200;
DELETE FROM CLIENTE;
DELETE FROM ESTACIONA;

-- DQL

SELECT * FROM VAGA;
SELECT * FROM CLIENTE;
SELECT * FROM MENSALISTA;
SELECT * FROM AVULSO;
SELECT * FROM ESTACIONA;

SELECT ESTACIONA.ENTRADA, ESTACIONA.VAGA, AVULSO.PLACA
FROM ESTACIONA
INNER JOIN AVULSO ON
AVULSO.CODIGO = ESTACIONA.CLIENTE
